DataBase Notes :
*****************
Data :where we go we find data like if i am going to library i am finding data about books,no of pages etc so data is very important to us so we can define data as Raw facts or something known facts which can be stored on computer is called as data and it can be any format like image etc so u know it better no need to tell .

Information:Data is presented in such a manner that it increases the knowledge of the person who is using it ,now imagine raghu , 26 ,old is something called as raw facts and raghu is 26 years old is called as information so when i am providing some context for the data it becomes information suppose i have written some numbers randomly one after the other when i write heading mobile nos then i am providing context to it ,In the same way data shown in pie charts ,bar graphs also represent some kind of information and all okay .so processed data we can call it as Information .


Database : An organized collection of logical related data is called as database ,so there are many definitions for databases like collection of tables is called  as database.underline organized and related so here i underline organized because data  is structured means in the form of rows and columns and this makes a user to easily store ,manipulate and retrive the data .and By related means domain of interest suppose i am developing or working on project relared to sales domain i will find data related to sales domain only in the not some other data okay .

DBMS: The task of managing data stored in tables is done by dbms software and it provides three things --structures ,mechanism to add,edit and delete and data security .

There are many databases softwares in the market like oracle ,sql server ,mysql and some databses came and gone also like sybase etc .

Now the question is why we are using databases they are created mainly to solve some problems so what are those problems .so now the question is earlier the data was stored in flat files so what are the drawbacks of it .

-->size 
-->easy of updating (in a multi user environment it is diffcult to do updating in file system as overwriting may happpen and leads to corruption of data) 
-->accuracy (is there anything which will prevent me from writing incorrect data in spreadsheet ) 
-->secuirty (your data needs to be shared with some one if it needs to shared means doesnt means that it needs to shared with everyone because some of the data will be sensitive like payroll information and health care data etc so certain rights and permission has to be provided on certain tables as per the user etc so which is not possible in file based system )
-->redundancy (this is good when u want to take back up like u have an extra file like this but redundancy within the data is not good for example a person is having multiple addresses and for a product it is showing different price values etc ) 
-->importance (imagine some crash or dissconnection happened while working on spreadsheet data is critical as it can store any and very important data )

so these are the problems why we need the database okay.

The true power of database is it is invisible .

if i ask somebody what is a database they say oracle ,sql server ,mysql ,mangodb etc but they are not databases actually they are database management system.so we will install the dbms software into our system okay and using that software we will create and manage dabases okay so create box and inside box keep some databases with cylinders and name box as sql server or oracle etc like this okay .

so these dbms has types and most common of them is relational dbms .

show them slide 1 okay while taking class okay and we will disscuss about other models later on okay ..when we move further into the classes okay .

Data Modeling :
_________________
To know how data is organized in the tables we go for data modeling so DB designer will develop the database and its table and how come the user will know how the data looks for that he will do data modeling something like creating a blue print for ur database .The most famous of this modeling is E-R Modeling (Entity -Relationship Modeling ) 

Entity : An indistinguisable self contained unit is called as entity otherwise i want to store about something that something is nothing entity .
eg : I am devloping a project on sales domain then first thing comes into my mind is product ,customer etc so these things are entities okay .
and this entity can be anything ---person (employee,student ) ,place (store ,state) ,concept (account ,course) ,event (registration ) ,object (machine,automobile ) .

show them slide 3 like customer buys a product how it is related we will see later so association between entities is called as relationships.

Each entity is having attributes like characteristics we can say and in that one identifier attribute will be there which is called a primary key and using this we can identify one particular row in a table show them slide 4 and slide 5 okay .




Keys :
_____
-->Primary key (any attribute or set of attributes that uniquely identifies a row in a table is called as primary key ) slide 6 show them 

-->composite key or composite primary key ( when the key that uniquely identifies rows is made up of more than one attribute we call it as composite key or in this i cannot take out alternate keys untill the last moment what i have made as primary key columns them will remain as it is eg :bank locker which can be opened by two people )  
-->foreign key (Any attribute in a relation of database that serves as a primary key of another relation in the same database so it allows a user to associate any employee with the department to which he or she is assigned it shows some what parent-child relationship  ) 

eg : employee1(empid ,name ,deptname ,salary )
               _____        --------

	department (deptname,location,region ) 		   
                _________
				
	check slide 8 for the above example okay .

Entity type and Entity Instance :
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

collection of entities having similar characteristics is called as entity type only once it is declared and entity instance is single occurence of entity type we can say 
below u can see the examples clearly okay 

entity type of employee :
Employee 

attributes :
____________
EmployeeNO   int 
Name         varchar(20)
age          int 

created two instances of employee :


1104
raghu
31

1105
kumar 
34 


Strong and Weak entity :
__________________________
An entity which is self contained and having its own identifier attribute then it is called as strong entity and an entity which depends on some other entity for its exsistence and its doesnt have its own identifier attribute and it takes strong entity as its identifier attibute so check slide 9 for this example .

Sub Type and Super Type entities :
___________________________________

check slide 10 and 11 for this that only will explain the things properly so sometimes u may feel that main entity can be divided based on situation as well and u can see the slide 11 they are self contained entities only but relationship exists and it has no name .

Attribute types :
_________________
1)composite attribute : Any attribute that can be broken into  component parts is called as compisite attribute 

2) simple attribute :that cannot be broken 

3)multivalued attribute : for a given instance more than one value it has eg: skill 

student   course   skill 

raghu      c++      c,c++ 

remeber these multivalued attibutes cannot be kept inside the table why and what it causes problems we will see in normalization part as per ef codd rules the mathematician a combination of row and column must and should have unique values .

4)derived attribute : suppose u want to find no of years employed with the company that can be found using hire date -current date so these kind of attributes we dont use in tables in the same manner there will no attribute like age but u can have date of birth because it is ever changing so these kind of attibutes are called as derived attributes and all okay 



5)sometimes a primary key may have composite attribute so u can check it like filghtid is a primary key and it may have flightno and date of travelling as combination so again it is also one type of composite key and for all th examples of this look for slide 12 it covers all the examples okay .


Types of Relationships(Modeling of relationships ):
__________________________________________________

we are oranizing database into individual tables so many of these  tables need to know about each other .Now we have already done some er diagrams now we can see from slide 13 that so building this relationship inside a database u need to define what these relationship are so what and all we have defined is for ur understanding and benefits but in database it is not defined in that way

so there are three relationships 

1 to 1 
1 to m 
m to m 


if we have defined the relationships between tables then dbms itslef takes care of it and using those relationship we can answer and anlize the scenarios or what we want like for the product how many orders or customers have been placed etc kind of things so we can jump easily from one table to another by following relationships okay .check slide 14 

1 to m :
_________
The most typical kind of cardanility is one to many and also called as many to one 

from slide 15 one customer can have many orders associated with it and each order is only for one customer as per the slide 16 and 17 one okay .so here parent and child relationship kind of thing exist  we can change the names of columns no problem but the datatypes should match okay check slide 18 and also it is very common that one table should take part in multiple relationships as well like a customer may have got many orders and our customers may have multiple different addesses as well they can have shipping and billing addessees kind of stuff then so we will add new table for adddress and another one to many relationship between them as shown in slide 19 

A table which is on many side can have one to many relationship with other like slide 20 because an order itself could have many ordereditems  so one customer can have many orders and one order may contain many order items as well okay .so finally we will come to diagrams like slide 21 and 22 and different db server will have different types of diagrams based on software they are using okay so this is all about one to many relationship u can take any other examples like put the enties and list out instances and think logically automatically u will come to know what kind of relationship is existing okay and again based on policies of company these things may change like that .

for example an employee works in department example will be better if u are explaining as per earlier teaching expereince that will be good.

1 to 1 :
_________
it is possible to create one to one relationship in the database but it is very unusual i will tell u why suppose i am creating an HR database i need to figure out entities like Employee and Driverslicence so as per 23 slide it is okay but so here anything can be made fk as per the scenario so why dont i do like this as per slide 24 with no relationship needed .so while designing database u have to careful where one to one can be used 
check slides from 25 to 27 and understand if it is from left to right one to one exists but if right to left that product may be contined multiple times but order item is for only one and one product means when u have found one to one look at both ways genrally it wont be one to one 

another example vehicle and parking place will be nice if u think logically okay .


m to m :
________

so what is manay to many check slide 28 one book can be written by many authors and one author can write many books as well so this condition depicts good example here .Now i will use different scenario like database for training centre and all now imagine i have two tables right now like class and student as shown in slide 29 and now i want to define a relationship between class and student so a class can be attenede by multiple students but also a student can take multiple different classes okay so the problem here is i cannot add foreign key to repesent because imagine i have added student column as foreign key as shown in slide 30 then i can have only one student in each class and if i add classid column to the student table then i can say from the diagram that each student can take only one class as per slide 31 so a relationship database cannot represent m to m relationship directly so what we have to do for this so u need to create new table like slide 32 to link the two okay it is called as join table or junction table or linking table okay and many names like bridging table etc so u can see one to many two times from one of the table to jucntion table which is classstudent okay u can name it either it doesnt matter okay .This linking table doesnt contain any other data than these two columns one of the column act as foreign key with other tables like studentid with classtable and classid with studenttable okay check slide 33 i want to know 102 student has taken how many classes he has taken then it is like as per the diagram same way check slide 34 as well in other way so it is only way to represent the many to many relationships or cardinality .Now what is the primary key for the junction table so a combination of both columns will be the primary key okay .

so final conclusion is that relationship are convenint way to link one to another okay and this is reffered as referential integrity okay check slide 35 i cannot add a order row for a customer who is not at there so it gives or violates referential integrity constraint okay .so it will allow a customer without an order but order without a customer is not possible okay .what happens when i delete data which is having the refential integrity constraint applied to it so we having certain options for this while creating table only we apply those things so that all relating tables get deleted as per the slide 36 and same way we have nullify option as well as per the slide 37 and if we dont keep any option then as per slide 38 it wont get deleted it will throw some exception to us eventhouh we try to delete okay .so while creating first create customers and while deleting first delete order that is only the solution okay .


Introduction to SQL:
____________________
SQl means structured query language okay some people say sequel and some people say sql .it was developed in 1970 and still it has not changed much if u see front end programming languages they will  be keep on changing.check slide 58 what is is actulally so in procedural and impartive languages we write algortithms and etc things to get things done .we can do four things with sql as per the slide 59 so when  are working with oracle u will use pl-sql and if u are working with sql server it is called transact sql so almost same but sytax wise the things will differ thats all .


so we store the data in databases and applications will be using those databases okay and the we call those kind of applications as database applications .so u can check slide 60 for this which will show various types of applications going on .

i want to interact with database so that is possible through sql etc .

sql has been subcategorized into 5 parts 

DDL(Data defnition language ) 

For defining structure of objects in database means objects means nothing but tables ,stored procedures ,views constraints etc which we will learning later on .and it privides four commands create,alter,drop,truncate  so these are the commands which completely deals with structure.

DML(Data manipulation language ) 

This is the language which is going to deal with data in database tables which provides following commands like insert,update and delete 

Note : drop will destroy the table and delete will destroy the rows ( data ) and alter means structure is modified and update means data is modified .


DQL(data query language ) 
This language is used to retrive from database using the command select 

DCL ( data control language ) 

It is used for managing the security of data and objects in database so commands are grant ,revoke etc 


TCL(Transaction control language ) 

This language is used for managing the transaction which provides commands like commit,rollback and save transaction etc .

There are many databases like IBM DB2 mainly used for mainframes it is very much secure able to store huge amount of data ,oracle is dominating 50 % of the market because it is platform independent and it satisfies 11 rules of codd ,sybase they introduced which was satisfying all the 12 codd rules but is was not the product of microsoft so they promoted more to sql server and using sql server is microsoft most freiendly database but is not that much secured as oracle or db2 because secuirty comes from OS and  windows is not secured as virus etc we get compared to linux os and this msql works or sticks on windows you cannot change os and if u want some free database use mysql free downloaded and used .

so what is these codd rules
check slides from 61 to 73 slides okay 

Notes for important rules 

as per rule 4 there should be some thing to tell yes this is structure of table u will create the tables and infact lot of tables but suddenly u want to know its structure etc u can do it using data dictionary tables u just have to query those tables like select * from sys.tables etc kind of stuff so datadictionary contains metadata and metadata means data about the data .

as per rule 5 it is saying that every database software should have thier sql part strong means as i have provided 5 types in sql itself that is what the slide says and it is also one of the codd rules .

as per rule 6 from both sides it should be updatable okay .

as per rule 8 if i am using array ,linked list or b + tree usage i changed that should not be effected at high level ur wish u can use or store any type like that the rule says.


as per rule 9 if i am doing changes in table structure also the changes should not be effected or reflected at the application level .

as per rule 10 integrity means u shoudl be able to apply constrinats and triggers based on business rules and policies of the company  eg id shoudl not be duplicate ,middle name can be null in indian population etc many things u should be able to implement it okay .

as per rule 11 ..the biggeest advantage of db server is it is invisible and the user who is using the database should not know from where he is getting feedback like this many rows selected etc kind of stuff okay .

so these are all codd rules okay .
